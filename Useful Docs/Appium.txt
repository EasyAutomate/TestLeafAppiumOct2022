NFR
1. Battery drain %
2. Phone interuption
3. Internal Storage full
4. Ram almost full

Interview
1. Test Bed
2. Types of Apps
3. Framework built for Android and iOS
4. Default OS version supported by Appium for Android and iOS
5. Appium Workflow - Hybrid, Native, Mobile Web
6. Vendor specific mechanism
7. Which version of Appium support XCUITest and UiAutomator2
8. Can I run iOS test cases from Windows/Linux client machine
9. Why iOS test cases cannot run on Windows/Linux client machine
10. Does nodes are manually connected in Appium
11. Available locators
12. Attribute name of the available locators
13. Softwares to be installed for Android --> IDE, Java (JDK 8), Android Cmd line tools (Anroid studio preferred), Appium Server and Inspector
14. ADB commands --> any command from the ADB cheat sheet
15. abd devices --> possible options
16. Mandatory caps in Android --> with apk file, with app already installed
17. Can I skip the platformName capability in DC and create the session
18. Scenario where the apk file might not be provided
19. Default time duration for swipe recommended in Appium (600 ms)
20. How many ways the swipe can be performed
21. all methods in wrappers
22. How to switch to multiple pages in web browser
23. Diference between activateApp and driver.startActivity() methods
24. driver.startActivity() is applicable for iOS


Challenges
1. Hybrid Native --> Release/Production build cannot be tested
2. In most of the cases (Native app/Hybrid Native app --> Native view) we would be using XPATH as the locator since most of the app would be built earlier before we start the automation. So we need be careful in writing the XPATH. Note: Never use the index option as it changes based on the screen size. Try to use other option to write your XPATH eg. with text, preceding, following etc.
3. If Appium version is lower, there are chances of failure in latest OS devices --> Always have Android SDK, Build tools , Appium to the latest version
4. Port no of the Server, Client, Bootstrap.jar installed in device are default if it is not explicitly mentioned
5. Socket Hangup error is thrown if any of the port is not responding 
	1. Close the app by code everytime
	2. Wait for 60 sec (based on newCommandTimeout capability)
	3. Delete the apps in Mobile
	4. Kill the appium server and adb and then start again
6. App could not be installed in device due to below factors
	1. Admin permission for Appium and ADB
	2. If custom OS is installed, we need to enable setting in USB debugging
7. When VDM is modified in code, Appium Server should be restarted and Server, Client, Bootstrap.jar installed in device should be uninstalled
8. If the screenshot is disabled in App, Appium will not be able to identify the locators. We need to ask Dev team to provide a build to identify the locators.
9. If app is obfuscated then we might have challenges in identifying the locators. We might need to use XPATH for all the places eventhought id/name is provided by the dev team
10. In case if we have added only "app" as part of desired caps, while trying to launch the app we may end up with error stating "Not a launchable activity"/"app permission denied". --> In that case add appPackage and appActivty along with the existing desired capabilities.
11. During swipe, check if the starting co-ordinates are not overlapping with any other element
12. In case, if swipe is not working try to print the co-ordinates, validate the same in Appium inspector
13. Toast/Capacha/Graph cannot be automated (Similar challenges of Selenium)
14. While trying to launch with appPackage and appActivity we may end with Penmission denial error (org.openqa.selenium.SessionNotCreatedException) --> Use application Info.apk and find the right activity which has permission
15. Failure for TouchAction, MultiTouchAction
16. In PointerInput for iOS, the button are being clicked when createPointerDown is called
17. Scroll/swipe should be perform on element with scrollable att set as true
18. autoGrantPermissions will always search for a element with id as button2. If found then it will chick that element
19. If object is created using AndroidDriver or IOSDriver then the platformName cap should not be provided in code
20. If I switch the context the implicit wait duration is reset to 0
21. isKeyboardShown will return false if the on screen keyboard is a numeric keyboard
22. Appium can automate only visible portion of the screen
23. activateApp method can fail if the appActivity in manifest doesnot have permission
24. Phone should be connected via USB cable while perform Wi-Fi & Mobile Data on/off scenarios
25. Physical keyboard actions like Keys.Enter will not be working in webview. In Android, native android keys layout is used
26. GetContextHandles() will print the webview running in background as well
27. Always try to switch to the right WEBVIEW since the GetContextHandles() returns Set<String>
28. AppiumBy using Id and Name locators cannot be identified 
29. Appium Inspector cannot click on overlapping element
30. In older appium versions, switching between web app to native/hybrid app was not possible
31. If session is created for Browser (Mobile Web), then we can switch to Native context only. WebView context will work only for Browser (Mobile Web)
32. If session is created as an App (Native/Hybrid), then we can switch between Native, WebView in App , WebView in Mobile App



	
